// Classification of all state attributes possible
const stateAttrb = {
    actualityDuration: {
        name: '< unknown >',
        type: 'number',
        role: 'state',
        unit: '',
    },
    energy: {
        name: 'Zählerstand Bezug Gesamt',
        type: 'number',
        role: 'value.power.consumption',
        unit: 'kWh',
        factor: 10000000000,
    },
    energy1: {
        name: 'Zählerstand Bezug T1',
        type: 'number',
        role: 'value.power.consumption',
        unit: 'kWh',
        factor: 10000000000,
    },
    energy2: {
        name: 'Zählerstand Bezug T2',
        type: 'number',
        role: 'value.power.consumption',
        unit: 'kWh',
        factor: 10000000000,
    },
    energy3: {
        name: 'Zählerstand Bezug T3',
        type: 'number',
        role: 'value.power.consumption',
        unit: 'kWh',
        factor: 10000000000,
    },
    energyOut: {
        name: 'Zählerstand Abgabe Gesammt',
        type: 'number',
        role: 'value.power.delivery',
        unit: 'kWh',
        factor: 10000000000,
    },
    energyOut1: {
        name: 'Zählerstand Abgabe T1',
        type: 'number',
        role: 'value.power.delivery',
        unit: 'kWh',
        factor: 10000000000,
    },
    energyOut2: {
        name: 'Zählerstand Abgabe T2',
        type: 'number',
        role: 'value.power.delivery',
        unit: 'kWh',
        factor: 10000000000,
    },
    energyOut3: {
        name: 'Zählerstand Abgabe T3',
        type: 'number',
        role: 'value.power.delivery',
        unit: 'kWh',
        factor: 10000000000,
    },
    energyProducer8: {
        name: 'energy Producer',
        type: 'number',
        role: 'value.power.delivery',
        unit: 'kWh',
        factor: 10000000000,
    },
    energyProducer9: {
        name: 'energy Producer',
        type: 'number',
        role: 'value.power.delivery',
        unit: 'kWh',
        factor: 10000000000,
    },
    energyProducer10: {
        name: 'energy Producer',
        type: 'number',
        role: 'value.power.delivery',
        unit: 'kWh',
        factor: 10000000000,
    },
    energyProducer506: {
        name: 'energy Producer',
        type: 'number',
        role: 'value.power.delivery',
        unit: 'kWh',
        factor: 10000000000,
    },
    energyProducer507: {
        name: 'energy Producer',
        type: 'number',
        role: 'value.power.delivery',
        unit: 'kWh',
        factor: 10000000000,
    },
    energyProducer763: {
        name: 'energy Producer',
        type: 'number',
        role: 'value.power.delivery',
        unit: 'kWh',
        factor: 10000000000,
    },

    serialNumber: {
        name: 'Serialnumber',
        type: 'number',
        role: 'state',
    },
    lastMeasurementTime: {
        name: 'lastMeasurement Time',
        type: 'number',
        role: 'state',
    },
    firstMeasurementTime: {
        name: 'firstMeasurementTime',
        type: 'number',
        role: 'state',
    },
    internalMeters: {
        name: 'internal Meters',
        type: 'number',
        role: 'state',
    },
    voltageScalingFactor: {
        name: 'voltage ScalingFactor',
        type: 'number',
        role: 'state',
    },
    currentScalingFactor: {
        name: 'current ScalingFactor',
        type: 'number',
        role: 'state',
    },
    scalingFactor: {
        name: 'scaling Factor',
        type: 'number',
        role: 'state',
    },
    loadProfileType: {
        name: 'loadProfileType',
        type: 'mixed',
        role: 'state',
    },
    measurementType: {
        name: 'measurementType',
        type: 'mixed',
        role: 'state',
    },
    type: {
        name: 'type',
        type: 'mixed',
        role: 'state',
    },
    administrationNumber: {
        name: 'administration Number',
        type: 'number',
        role: 'state',
    },
    location: {
        name: 'location',
        type: 'array',
        role: 'state',
    },
    fullSerialNumber: {
        name: 'full Serial Number',
        type: 'number',
        role: 'state',
    },
    manufacturerId: {
        name: 'manufacturer Id',
        type: 'number',
        role: 'state',
    },
    meterId: {
        name: 'meterId',
        type: 'number',
        role: 'state',
    },
    phase1Voltage: {
        name: 'Voltage',
        type: 'number',
        role: 'value.voltage',
        unit: 'V',
        factor: 1000,
    },
    phase2Voltage: {
        name: 'Voltage',
        type: 'number',
        role: 'value.voltage',
        unit: 'V',
        factor: 1000,
    },
    phase3Voltage: {
        name: 'Voltage',
        type: 'number',
        role: 'value.voltage',
        unit: 'V',
        factor: 1000,
    },
    phase1Power: {
        name: 'Power 1',
        type: 'number',
        role: 'value.power.consumption',
        unit: 'W',
        factor: 1000,
    },
    phase2Power: {
        name: 'Power 2',
        type: 'number',
        role: 'value.power.consumption',
        unit: 'W',
        factor: 1000,
    },
    phase3Power: {
        name: 'Power 3',
        type: 'number',
        role: 'value.power.consumption',
        unit: 'W',
        factor: 1000,
    },
    power: {
        name: 'Power',
        type: 'number',
        role: 'value.power.consumption',
        unit: 'W',
    },
    power1: {
        name: 'Power 1',
        type: 'number',
        role: 'value.power.consumption',
        unit: 'W',
        factor: 1000,
    },
    power2: {
        name: 'Power 2',
        type: 'number',
        role: 'value.power.consumption',
        unit: 'W',
        factor: 1000,
    },
    power3: {
        name: 'Power 3',
        type: 'number',
        role: 'value.power.consumption',
        unit: 'W',
        factor: 1000,
    },
    Power_Consumption: {
        name: 'Power_Consumption',
        type: 'number',
        role: 'value.power.consumption',
        unit: 'W',
        factor: 1000,
    },
    Power_T1_Consumption: {
        name: 'Power_T1_Consumption',
        type: 'number',
        role: 'value.power.consumption',
        unit: 'W',
        factor: 1000,
    },
    Power_T2_Consumption: {
        name: 'Power_T2_Consumption',
        type: 'number',
        role: 'value.power.consumption',
        unit: 'W',
        factor: 1000,
    },
    Power_T3_Consumption: {
        name: 'Power_T3_Consumption',
        type: 'number',
        role: 'value.power.consumption',
        unit: 'W',
        factor: 1000,
    },
    Power_Delivery: {
        name: 'Power_Delivery',
        type: 'number',
        role: 'value.power.consumption',
        unit: 'W',
        factor: 1000,
    },
    Power_T1_Delivery: {
        name: 'Power_T1_Delivery',
        type: 'number',
        role: 'value.power.consumption',
        unit: 'W',
        factor: 1000,
    },
    Power_T2_Delivery: {
        name: 'Power_T2_Delivery',
        type: 'number',
        role: 'value.power.consumption',
        unit: 'W',
        factor: 1000,
    },
    Power_T3_Delivery: {
        name: 'Power_T3_Delivery',
        type: 'number',
        role: 'value.power.consumption',
        unit: 'W',
        factor: 1000,
    },
    printedFullSerialNumber: {
        name: 'Printed Full SerialNumber',
        type: 'mixed',
        role: 'state',
    },
    timestamp: {
        name: 'Timestamp of last value update',
        type: 'number',
        role: 'state',
    },
    uptime: {
        name: 'uptime',
        type: 'number',
        role: 'state',
    },
    voltage: {
        name: 'Voltage',
        type: 'number',
        role: 'value.voltage',
        unit: 'V',
        factor: 1000,
    },
    voltage1: {
        name: 'Voltage',
        type: 'number',
        role: 'value.voltage',
        unit: 'V',
        factor: 1000,
    },
    voltage2: {
        name: 'Voltage',
        type: 'number',
        role: 'value.voltage',
        unit: 'V',
        factor: 1000,
    },
    voltage3: {
        name: 'Voltage',
        type: 'number',
        role: 'value.voltage',
        unit: 'V',
        factor: 1000,
    },
    volume: {
        name: 'Volume',
        type: 'number',
        role: 'state',
        unit: 'm3',
    },
    // EMH meter additional state types - Reactive Energy
    reactiveEnergy: {
        name: 'Reactive Energy Total',
        type: 'number',
        role: 'value.power.reactive',
        unit: 'kvarh',
        factor: 10000000000,
    },
    reactiveEnergy1: {
        name: 'Reactive Energy T1',
        type: 'number',
        role: 'value.power.reactive',
        unit: 'kvarh',
        factor: 10000000000,
    },
    reactiveEnergy2: {
        name: 'Reactive Energy T2',
        type: 'number',
        role: 'value.power.reactive',
        unit: 'kvarh',
        factor: 10000000000,
    },
    reactiveEnergy3: {
        name: 'Reactive Energy T3',
        type: 'number',
        role: 'value.power.reactive',
        unit: 'kvarh',
        factor: 10000000000,
    },
    reactiveEnergy4: {
        name: 'Reactive Energy T4',
        type: 'number',
        role: 'value.power.reactive',
        unit: 'kvarh',
        factor: 10000000000,
    },
    reactiveEnergyOut: {
        name: 'Reactive Energy Out Total',
        type: 'number',
        role: 'value.power.reactive',
        unit: 'kvarh',
        factor: 10000000000,
    },
    reactiveEnergyOut1: {
        name: 'Reactive Energy Out T1',
        type: 'number',
        role: 'value.power.reactive',
        unit: 'kvarh',
        factor: 10000000000,
    },
    reactiveEnergyOut2: {
        name: 'Reactive Energy Out T2',
        type: 'number',
        role: 'value.power.reactive',
        unit: 'kvarh',
        factor: 10000000000,
    },
    reactiveEnergyOut3: {
        name: 'Reactive Energy Out T3',
        type: 'number',
        role: 'value.power.reactive',
        unit: 'kvarh',
        factor: 10000000000,
    },
    reactiveEnergyOut4: {
        name: 'Reactive Energy Out T4',
        type: 'number',
        role: 'value.power.reactive',
        unit: 'kvarh',
        factor: 10000000000,
    },
    // Capacitive Reactive Energy
    capacitiveReactiveEnergy: {
        name: 'Capacitive Reactive Energy Total',
        type: 'number',
        role: 'value.power.reactive',
        unit: 'kvarh',
        factor: 10000000000,
    },
    capacitiveReactiveEnergy1: {
        name: 'Capacitive Reactive Energy T1',
        type: 'number',
        role: 'value.power.reactive',
        unit: 'kvarh',
        factor: 10000000000,
    },
    capacitiveReactiveEnergy2: {
        name: 'Capacitive Reactive Energy T2',
        type: 'number',
        role: 'value.power.reactive',
        unit: 'kvarh',
        factor: 10000000000,
    },
    capacitiveReactiveEnergy3: {
        name: 'Capacitive Reactive Energy T3',
        type: 'number',
        role: 'value.power.reactive',
        unit: 'kvarh',
        factor: 10000000000,
    },
    capacitiveReactiveEnergy4: {
        name: 'Capacitive Reactive Energy T4',
        type: 'number',
        role: 'value.power.reactive',
        unit: 'kvarh',
        factor: 10000000000,
    },
    capacitiveReactiveEnergyOut: {
        name: 'Capacitive Reactive Energy Out Total',
        type: 'number',
        role: 'value.power.reactive',
        unit: 'kvarh',
        factor: 10000000000,
    },
    capacitiveReactiveEnergyOut1: {
        name: 'Capacitive Reactive Energy Out T1',
        type: 'number',
        role: 'value.power.reactive',
        unit: 'kvarh',
        factor: 10000000000,
    },
    capacitiveReactiveEnergyOut2: {
        name: 'Capacitive Reactive Energy Out T2',
        type: 'number',
        role: 'value.power.reactive',
        unit: 'kvarh',
        factor: 10000000000,
    },
    capacitiveReactiveEnergyOut3: {
        name: 'Capacitive Reactive Energy Out T3',
        type: 'number',
        role: 'value.power.reactive',
        unit: 'kvarh',
        factor: 10000000000,
    },
    capacitiveReactiveEnergyOut4: {
        name: 'Capacitive Reactive Energy Out T4',
        type: 'number',
        role: 'value.power.reactive',
        unit: 'kvarh',
        factor: 10000000000,
    },
    // Inductive Reactive Energy
    inductiveReactiveEnergy: {
        name: 'Inductive Reactive Energy Total',
        type: 'number',
        role: 'value.power.reactive',
        unit: 'kvarh',
        factor: 10000000000,
    },
    inductiveReactiveEnergy1: {
        name: 'Inductive Reactive Energy T1',
        type: 'number',
        role: 'value.power.reactive',
        unit: 'kvarh',
        factor: 10000000000,
    },
    inductiveReactiveEnergy2: {
        name: 'Inductive Reactive Energy T2',
        type: 'number',
        role: 'value.power.reactive',
        unit: 'kvarh',
        factor: 10000000000,
    },
    inductiveReactiveEnergy3: {
        name: 'Inductive Reactive Energy T3',
        type: 'number',
        role: 'value.power.reactive',
        unit: 'kvarh',
        factor: 10000000000,
    },
    inductiveReactiveEnergy4: {
        name: 'Inductive Reactive Energy T4',
        type: 'number',
        role: 'value.power.reactive',
        unit: 'kvarh',
        factor: 10000000000,
    },
    inductiveReactiveEnergyOut: {
        name: 'Inductive Reactive Energy Out Total',
        type: 'number',
        role: 'value.power.reactive',
        unit: 'kvarh',
        factor: 10000000000,
    },
    inductiveReactiveEnergyOut1: {
        name: 'Inductive Reactive Energy Out T1',
        type: 'number',
        role: 'value.power.reactive',
        unit: 'kvarh',
        factor: 10000000000,
    },
    inductiveReactiveEnergyOut2: {
        name: 'Inductive Reactive Energy Out T2',
        type: 'number',
        role: 'value.power.reactive',
        unit: 'kvarh',
        factor: 10000000000,
    },
    inductiveReactiveEnergyOut3: {
        name: 'Inductive Reactive Energy Out T3',
        type: 'number',
        role: 'value.power.reactive',
        unit: 'kvarh',
        factor: 10000000000,
    },
    inductiveReactiveEnergyOut4: {
        name: 'Inductive Reactive Energy Out T4',
        type: 'number',
        role: 'value.power.reactive',
        unit: 'kvarh',
        factor: 10000000000,
    },
    // Additional Energy Types
    energy4: {
        name: 'Energy T4',
        type: 'number',
        role: 'value.power.consumption',
        unit: 'kWh',
        factor: 10000000000,
    },
    energyOut4: {
        name: 'Energy Out T4',
        type: 'number',
        role: 'value.power.delivery',
        unit: 'kWh',
        factor: 10000000000,
    },
    // Power Measurements
    reactivePower: {
        name: 'Reactive Power',
        type: 'number',
        role: 'value.power.reactive',
        unit: 'var',
        factor: 1000,
    },
    apparentPower: {
        name: 'Apparent Power',
        type: 'number',
        role: 'value.power.apparent',
        unit: 'VA',
        factor: 1000,
    },
    phase1ApparentPower: {
        name: 'Apparent Power Phase 1',
        type: 'number',
        role: 'value.power.apparent',
        unit: 'VA',
        factor: 1000,
    },
    phase2ApparentPower: {
        name: 'Apparent Power Phase 2',
        type: 'number',
        role: 'value.power.apparent',
        unit: 'VA',
        factor: 1000,
    },
    phase3ApparentPower: {
        name: 'Apparent Power Phase 3',
        type: 'number',
        role: 'value.power.apparent',
        unit: 'VA',
        factor: 1000,
    },
    phase1ReactivePower: {
        name: 'Reactive Power Phase 1',
        type: 'number',
        role: 'value.power.reactive',
        unit: 'var',
        factor: 1000,
    },
    phase2ReactivePower: {
        name: 'Reactive Power Phase 2',
        type: 'number',
        role: 'value.power.reactive',
        unit: 'var',
        factor: 1000,
    },
    phase3ReactivePower: {
        name: 'Reactive Power Phase 3',
        type: 'number',
        role: 'value.power.reactive',
        unit: 'var',
        factor: 1000,
    },
    // Current Measurements
    phase1Current: {
        name: 'Current Phase 1',
        type: 'number',
        role: 'value.current',
        unit: 'A',
        factor: 1000,
    },
    phase2Current: {
        name: 'Current Phase 2',
        type: 'number',
        role: 'value.current',
        unit: 'A',
        factor: 1000,
    },
    phase3Current: {
        name: 'Current Phase 3',
        type: 'number',
        role: 'value.current',
        unit: 'A',
        factor: 1000,
    },
    // Power Factor Measurements
    powerFactor: {
        name: 'Power Factor',
        type: 'number',
        role: 'state',
        unit: '',
    },
    phase1PowerFactor: {
        name: 'Power Factor Phase 1',
        type: 'number',
        role: 'state',
        unit: '',
    },
    phase2PowerFactor: {
        name: 'Power Factor Phase 2',
        type: 'number',
        role: 'state',
        unit: '',
    },
    phase3PowerFactor: {
        name: 'Power Factor Phase 3',
        type: 'number',
        role: 'state',
        unit: '',
    },
    // Frequency Measurement
    frequency: {
        name: 'Frequency',
        type: 'number',
        role: 'value.frequency',
        unit: 'Hz',
        factor: 1000,
    },
};

module.exports = stateAttrb;
